"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_categories_ts"],{

/***/ "(app-pages-browser)/./lib/categories.ts":
/*!***************************!*\
  !*** ./lib/categories.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCategory: () => (/* binding */ createCategory),\n/* harmony export */   createSubcategory: () => (/* binding */ createSubcategory),\n/* harmony export */   deleteCategory: () => (/* binding */ deleteCategory),\n/* harmony export */   deleteSubcategory: () => (/* binding */ deleteSubcategory),\n/* harmony export */   getAllCategories: () => (/* binding */ getAllCategories),\n/* harmony export */   getAllSubcategories: () => (/* binding */ getAllSubcategories),\n/* harmony export */   getCategoriesWithSubcategories: () => (/* binding */ getCategoriesWithSubcategories),\n/* harmony export */   getCategoryById: () => (/* binding */ getCategoryById),\n/* harmony export */   getCategoryThumbnail: () => (/* binding */ getCategoryThumbnail),\n/* harmony export */   getEffectiveThumbnail: () => (/* binding */ getEffectiveThumbnail),\n/* harmony export */   getMinimumPayment: () => (/* binding */ getMinimumPayment),\n/* harmony export */   getSubcategoriesByCategory: () => (/* binding */ getSubcategoriesByCategory),\n/* harmony export */   getSubcategoryById: () => (/* binding */ getSubcategoryById),\n/* harmony export */   updateCategory: () => (/* binding */ updateCategory),\n/* harmony export */   updateSubcategory: () => (/* binding */ updateSubcategory)\n/* harmony export */ });\nconst CATEGORIES_STORAGE_KEY = \"marketplace-categories\";\nconst SUBCATEGORIES_STORAGE_KEY = \"marketplace-subcategories\";\n// Mock data for development\nconst mockCategories = [\n    {\n        id: \"1\",\n        name: \"Social Media\",\n        slug: \"social-media\",\n        description: \"Social media engagement and promotion tasks\",\n        icon: \"share-2\",\n        thumbnail: \"/placeholder.svg?height=200&width=300&text=Social+Media\",\n        minimumPayment: 0.5,\n        sortOrder: 1,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"2\",\n        name: \"Content Creation\",\n        slug: \"content-creation\",\n        description: \"Writing, video, and creative content tasks\",\n        icon: \"edit-3\",\n        thumbnail: \"/placeholder.svg?height=200&width=300&text=Content+Creation\",\n        minimumPayment: 1.0,\n        sortOrder: 2,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"3\",\n        name: \"Data Entry\",\n        slug: \"data-entry\",\n        description: \"Data collection and entry tasks\",\n        icon: \"database\",\n        thumbnail: \"/placeholder.svg?height=200&width=300&text=Data+Entry\",\n        minimumPayment: 0.25,\n        sortOrder: 3,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"4\",\n        name: \"Testing & Reviews\",\n        slug: \"testing-reviews\",\n        description: \"App testing, website reviews, and feedback\",\n        icon: \"star\",\n        thumbnail: \"/placeholder.svg?height=200&width=300&text=Testing+Reviews\",\n        minimumPayment: 0.75,\n        sortOrder: 4,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    }\n];\nconst mockSubcategories = [\n    {\n        id: \"1\",\n        categoryId: \"1\",\n        name: \"Facebook Tasks\",\n        slug: \"facebook\",\n        description: \"Facebook likes, shares, follows, and engagement\",\n        minimumPayment: 0.5,\n        sortOrder: 1,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"2\",\n        categoryId: \"1\",\n        name: \"YouTube Tasks\",\n        slug: \"youtube\",\n        description: \"YouTube views, likes, subscribes, and comments\",\n        minimumPayment: 0.75,\n        sortOrder: 2,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"3\",\n        categoryId: \"1\",\n        name: \"TikTok Tasks\",\n        slug: \"tiktok\",\n        description: \"TikTok likes, follows, views, and engagement\",\n        minimumPayment: 0.6,\n        sortOrder: 3,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"4\",\n        categoryId: \"1\",\n        name: \"Instagram Tasks\",\n        slug: \"instagram\",\n        description: \"Instagram likes, follows, and story views\",\n        minimumPayment: 0.65,\n        sortOrder: 4,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"5\",\n        categoryId: \"2\",\n        name: \"Article Writing\",\n        slug: \"article-writing\",\n        description: \"Short articles and blog posts\",\n        minimumPayment: 5.0,\n        sortOrder: 1,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    },\n    {\n        id: \"6\",\n        categoryId: \"3\",\n        name: \"Data Collection\",\n        slug: \"data-collection\",\n        description: \"Gathering information from websites\",\n        minimumPayment: 0.5,\n        sortOrder: 1,\n        isActive: true,\n        createdAt: \"2024-01-01T00:00:00Z\"\n    }\n];\nconst getStoredCategories = ()=>{\n    if (false) {}\n    try {\n        const stored = localStorage.getItem(CATEGORIES_STORAGE_KEY);\n        return stored ? JSON.parse(stored) : mockCategories;\n    } catch (e) {\n        return mockCategories;\n    }\n};\nconst getStoredSubcategories = ()=>{\n    if (false) {}\n    try {\n        const stored = localStorage.getItem(SUBCATEGORIES_STORAGE_KEY);\n        return stored ? JSON.parse(stored) : mockSubcategories;\n    } catch (e) {\n        return mockSubcategories;\n    }\n};\nconst saveCategories = (categories)=>{\n    if (false) {}\n    try {\n        localStorage.setItem(CATEGORIES_STORAGE_KEY, JSON.stringify(categories));\n    } catch (error) {\n        console.error(\"Failed to save categories:\", error);\n    }\n};\nconst saveSubcategories = (subcategories)=>{\n    if (false) {}\n    try {\n        localStorage.setItem(SUBCATEGORIES_STORAGE_KEY, JSON.stringify(subcategories));\n    } catch (error) {\n        console.error(\"Failed to save subcategories:\", error);\n    }\n};\n// API Functions\nasync function getAllCategories() {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    return getStoredCategories().filter((cat)=>cat.isActive).sort((a, b)=>a.sortOrder - b.sortOrder);\n}\nasync function getAllSubcategories() {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    return getStoredSubcategories().filter((sub)=>sub.isActive).sort((a, b)=>a.sortOrder - b.sortOrder);\n}\nasync function getCategoriesWithSubcategories() {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    const categories = getStoredCategories().filter((cat)=>cat.isActive).sort((a, b)=>a.sortOrder - b.sortOrder);\n    const subcategories = getStoredSubcategories().filter((sub)=>sub.isActive).sort((a, b)=>a.sortOrder - b.sortOrder);\n    return categories.map((category)=>({\n            ...category,\n            subcategories: subcategories.filter((sub)=>sub.categoryId === category.id)\n        }));\n}\nasync function getCategoryById(id) {\n    await new Promise((resolve)=>setTimeout(resolve, 200));\n    const categories = getStoredCategories();\n    return categories.find((cat)=>cat.id === id) || null;\n}\nasync function getSubcategoryById(id) {\n    await new Promise((resolve)=>setTimeout(resolve, 200));\n    const subcategories = getStoredSubcategories();\n    return subcategories.find((sub)=>sub.id === id) || null;\n}\nasync function getSubcategoriesByCategory(categoryId) {\n    await new Promise((resolve)=>setTimeout(resolve, 200));\n    const subcategories = getStoredSubcategories();\n    return subcategories.filter((sub)=>sub.categoryId === categoryId && sub.isActive).sort((a, b)=>a.sortOrder - b.sortOrder);\n}\n// Admin functions\nasync function createCategory(data) {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    const newCategory = {\n        ...data,\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n    const categories = getStoredCategories();\n    categories.push(newCategory);\n    saveCategories(categories);\n    return newCategory;\n}\nasync function updateCategory(id, updates) {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    const categories = getStoredCategories();\n    const index = categories.findIndex((cat)=>cat.id === id);\n    if (index === -1) throw new Error(\"Category not found\");\n    const updatedCategory = {\n        ...categories[index],\n        ...updates,\n        updatedAt: new Date().toISOString()\n    };\n    categories[index] = updatedCategory;\n    saveCategories(categories);\n    return updatedCategory;\n}\nasync function deleteCategory(id) {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    const categories = getStoredCategories();\n    const index = categories.findIndex((cat)=>cat.id === id);\n    if (index === -1) throw new Error(\"Category not found\");\n    // Soft delete by setting isActive to false\n    categories[index] = {\n        ...categories[index],\n        isActive: false,\n        updatedAt: new Date().toISOString()\n    };\n    saveCategories(categories);\n}\nasync function createSubcategory(data) {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    const newSubcategory = {\n        ...data,\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n    };\n    const subcategories = getStoredSubcategories();\n    subcategories.push(newSubcategory);\n    saveSubcategories(subcategories);\n    return newSubcategory;\n}\nasync function updateSubcategory(id, updates) {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    const subcategories = getStoredSubcategories();\n    const index = subcategories.findIndex((sub)=>sub.id === id);\n    if (index === -1) throw new Error(\"Subcategory not found\");\n    const updatedSubcategory = {\n        ...subcategories[index],\n        ...updates,\n        updatedAt: new Date().toISOString()\n    };\n    subcategories[index] = updatedSubcategory;\n    saveSubcategories(subcategories);\n    return updatedSubcategory;\n}\nasync function deleteSubcategory(id) {\n    await new Promise((resolve)=>setTimeout(resolve, 300));\n    const subcategories = getStoredSubcategories();\n    const index = subcategories.findIndex((sub)=>sub.id === id);\n    if (index === -1) throw new Error(\"Subcategory not found\");\n    // Soft delete by setting isActive to false\n    subcategories[index] = {\n        ...subcategories[index],\n        isActive: false,\n        updatedAt: new Date().toISOString()\n    };\n    saveSubcategories(subcategories);\n}\nasync function getMinimumPayment(subcategoryId) {\n    const subcategory = await getSubcategoryById(subcategoryId);\n    if (subcategory) return subcategory.minimumPayment;\n    // Fallback to category minimum if subcategory not found\n    const subcategories = getStoredSubcategories();\n    const sub = subcategories.find((s)=>s.id === subcategoryId);\n    if (sub) {\n        const category = await getCategoryById(sub.categoryId);\n        return (category === null || category === void 0 ? void 0 : category.minimumPayment) || 0.1;\n    }\n    return 0.1 // Default minimum\n    ;\n}\nasync function getCategoryThumbnail(categoryId) {\n    const category = await getCategoryById(categoryId);\n    return (category === null || category === void 0 ? void 0 : category.thumbnail) || null;\n}\nasync function getEffectiveThumbnail(subcategoryId) {\n    const subcategory = await getSubcategoryById(subcategoryId);\n    if (!subcategory) return null;\n    // Return subcategory thumbnail if it exists\n    if (subcategory.thumbnail) {\n        return subcategory.thumbnail;\n    }\n    // Fallback to parent category thumbnail\n    const category = await getCategoryById(subcategory.categoryId);\n    return (category === null || category === void 0 ? void 0 : category.thumbnail) || null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/categories.ts\n"));

/***/ })

}]);