"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_local-storage_ts"],{

/***/ "(app-pages-browser)/./lib/local-storage.ts":
/*!******************************!*\
  !*** ./lib/local-storage.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearAllData: () => (/* binding */ clearAllData),\n/* harmony export */   favoritesStorage: () => (/* binding */ favoritesStorage),\n/* harmony export */   getCategories: () => (/* binding */ getCategories),\n/* harmony export */   initializeSampleData: () => (/* binding */ initializeSampleData),\n/* harmony export */   orderStorage: () => (/* binding */ orderStorage),\n/* harmony export */   serviceStorage: () => (/* binding */ serviceStorage),\n/* harmony export */   userStorage: () => (/* binding */ userStorage)\n/* harmony export */ });\n// Local Storage Keys\nconst STORAGE_KEYS = {\n    SERVICES: \"marketplace_services\",\n    ORDERS: \"marketplace_orders\",\n    USERS: \"marketplace_users\",\n    FAVORITES: \"marketplace_favorites\",\n    CATEGORIES: \"marketplace_categories\"\n};\n// Default categories\nconst DEFAULT_CATEGORIES = [\n    {\n        id: \"design-creative\",\n        name: \"Design & Creative\",\n        slug: \"design-creative\"\n    },\n    {\n        id: \"web-development\",\n        name: \"Web Development\",\n        slug: \"web-development\"\n    },\n    {\n        id: \"writing-translation\",\n        name: \"Writing & Translation\",\n        slug: \"writing-translation\"\n    },\n    {\n        id: \"video-animation\",\n        name: \"Video & Animation\",\n        slug: \"video-animation\"\n    },\n    {\n        id: \"digital-marketing\",\n        name: \"Digital Marketing\",\n        slug: \"digital-marketing\"\n    },\n    {\n        id: \"data-analytics\",\n        name: \"Data & Analytics\",\n        slug: \"data-analytics\"\n    }\n];\n// Sample data for initial setup\nconst SAMPLE_SERVICES = [\n    {\n        id: \"1\",\n        sellerId: \"seller1\",\n        categoryId: \"design-creative\",\n        title: \"I will create a professional logo design for your business\",\n        description: \"Looking for a professional logo that represents your brand perfectly? You've come to the right place! I'm a professional graphic designer with 5+ years of experience creating memorable logos for businesses worldwide.\\n\\nWhat you'll get:\\n• 3 unique logo concepts\\n• Unlimited revisions until you're 100% satisfied\\n• High-resolution files (PNG, JPG, PDF)\\n• Vector files (AI, EPS)\\n• Brand guidelines document\\n• Commercial usage rights\",\n        shortDescription: \"Professional logo design with unlimited revisions and all file formats included\",\n        price: 150,\n        deliveryTime: {\n            value: 3,\n            unit: \"days\"\n        },\n        revisionsIncluded: -1,\n        images: [\n            \"/logo-design-portfolio.png\"\n        ],\n        tags: [\n            \"logo design\",\n            \"branding\",\n            \"graphic design\",\n            \"business logo\",\n            \"modern design\"\n        ],\n        requirements: \"Please provide:\\n• Business name and tagline\\n• Industry/business type\\n• Color preferences\\n• Style preferences (modern, vintage, etc.)\\n• Any existing brand materials\",\n        status: \"active\",\n        rating: 4.9,\n        totalOrders: 47,\n        viewsCount: 1240,\n        createdAt: \"2024-01-05T10:00:00Z\",\n        updatedAt: \"2024-01-05T10:00:00Z\",\n        category: {\n            id: \"design-creative\",\n            name: \"Design & Creative\",\n            slug: \"design-creative\"\n        },\n        seller: {\n            id: \"seller1\",\n            firstName: \"Emma\",\n            lastName: \"Wilson\",\n            username: \"emmaw_design\",\n            rating: 4.9,\n            totalReviews: 156,\n            isVerified: true\n        },\n        serviceTiers: [\n            {\n                id: \"tier1\",\n                name: \"Basic\",\n                price: 100,\n                deliveryTime: 5,\n                revisions: 2,\n                features: [\n                    \"3 logo concepts\",\n                    \"2 revisions\"\n                ]\n            },\n            {\n                id: \"tier2\",\n                name: \"Standard\",\n                price: 150,\n                deliveryTime: 3,\n                revisions: \"unlimited\",\n                features: [\n                    \"3 logo concepts\",\n                    \"Unlimited revisions\"\n                ]\n            }\n        ],\n        addOns: [\n            {\n                id: \"addon1\",\n                name: \"Additional Color Options\",\n                price: 50,\n                description: \"Get more color options for your logo design\"\n            }\n        ]\n    },\n    {\n        id: \"2\",\n        sellerId: \"seller2\",\n        categoryId: \"web-development\",\n        title: \"I will build a responsive React website with modern design\",\n        description: \"Need a modern, responsive website built with React? I'm a full-stack developer with expertise in creating high-performance web applications that look great on all devices.\\n\\nWhat's included:\\n• Fully responsive design\\n• Modern React components\\n• Clean, semantic HTML/CSS\\n• Cross-browser compatibility\\n• SEO optimization\\n• Performance optimization\\n• 30 days of free support\",\n        shortDescription: \"Custom React website with responsive design and modern features\",\n        price: 800,\n        deliveryTime: {\n            value: 7,\n            unit: \"days\"\n        },\n        revisionsIncluded: 3,\n        images: [\n            \"/modern-website-design.png\"\n        ],\n        tags: [\n            \"react\",\n            \"website development\",\n            \"responsive design\",\n            \"modern web\",\n            \"frontend\"\n        ],\n        requirements: \"Please provide:\\n• Website purpose and goals\\n• Design preferences or examples\\n• Content (text, images, etc.)\\n• Any specific functionality needed\\n• Hosting preferences\",\n        status: \"active\",\n        rating: 5.0,\n        totalOrders: 23,\n        viewsCount: 890,\n        createdAt: \"2024-01-03T14:30:00Z\",\n        updatedAt: \"2024-01-03T14:30:00Z\",\n        category: {\n            id: \"web-development\",\n            name: \"Web Development\",\n            slug: \"web-development\"\n        },\n        seller: {\n            id: \"seller2\",\n            firstName: \"David\",\n            lastName: \"Chen\",\n            username: \"davidc_dev\",\n            rating: 4.8,\n            totalReviews: 89,\n            isVerified: true\n        }\n    },\n    {\n        id: \"3\",\n        sellerId: \"seller3\",\n        categoryId: \"writing-translation\",\n        title: \"I will write engaging blog posts and articles for your website\",\n        description: \"Boost your website's traffic and engagement with professionally written blog posts and articles! As a content marketing specialist with 4+ years of experience, I create compelling content that ranks well in search engines and converts readers into customers.\",\n        shortDescription: \"SEO-optimized blog posts and articles that drive traffic and engagement\",\n        price: 75,\n        deliveryTime: {\n            value: 2,\n            unit: \"days\"\n        },\n        revisionsIncluded: 2,\n        images: [\n            \"/content-writer.png\"\n        ],\n        tags: [\n            \"content writing\",\n            \"blog posts\",\n            \"SEO\",\n            \"copywriting\",\n            \"articles\"\n        ],\n        requirements: \"Please provide:\\n• Topic or keywords to target\\n• Target audience information\\n• Desired word count (500-2000 words)\\n• Tone and style preferences\\n• Any specific points to cover\",\n        status: \"active\",\n        rating: 4.8,\n        totalOrders: 134,\n        viewsCount: 567,\n        createdAt: \"2024-01-01T09:15:00Z\",\n        updatedAt: \"2024-01-01T09:15:00Z\",\n        category: {\n            id: \"writing-translation\",\n            name: \"Writing & Translation\",\n            slug: \"writing-translation\"\n        },\n        seller: {\n            id: \"seller3\",\n            firstName: \"Sarah\",\n            lastName: \"Martinez\",\n            username: \"sarahm_writer\",\n            rating: 4.8,\n            totalReviews: 201,\n            isVerified: true\n        }\n    },\n    {\n        id: \"4\",\n        sellerId: \"seller4\",\n        categoryId: \"video-animation\",\n        title: \"I will create stunning motion graphics and animations\",\n        description: \"Transform your ideas into captivating visual stories with professional motion graphics and animations. Perfect for marketing videos, explainer content, and brand presentations.\",\n        shortDescription: \"Professional motion graphics and animation services\",\n        price: 250,\n        deliveryTime: {\n            value: 5,\n            unit: \"days\"\n        },\n        revisionsIncluded: 2,\n        images: [\n            \"/video-animation-motion-graphics.png\"\n        ],\n        videoThumbnail: {\n            type: \"youtube\",\n            url: \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n        },\n        tags: [\n            \"motion graphics\",\n            \"animation\",\n            \"video editing\",\n            \"after effects\",\n            \"visual effects\"\n        ],\n        requirements: \"Please provide:\\n• Project concept and goals\\n• Style references\\n• Duration requirements\\n• Brand assets if applicable\\n• Specific animation requirements\",\n        status: \"active\",\n        rating: 4.7,\n        totalOrders: 67,\n        viewsCount: 432,\n        createdAt: \"2024-01-02T16:20:00Z\",\n        updatedAt: \"2024-01-02T16:20:00Z\",\n        category: {\n            id: \"video-animation\",\n            name: \"Video & Animation\",\n            slug: \"video-animation\"\n        },\n        seller: {\n            id: \"seller4\",\n            firstName: \"Alex\",\n            lastName: \"Rodriguez\",\n            username: \"alexr_motion\",\n            rating: 4.7,\n            totalReviews: 98,\n            isVerified: true\n        }\n    }\n];\n// Utility functions for localStorage operations\nclass LocalStorageManager {\n    getAll() {\n        if (false) {}\n        try {\n            const data = localStorage.getItem(this.key);\n            return safeParseJSON(data, []);\n        } catch (error) {\n            console.error(\"Error reading \".concat(this.key, \" from localStorage:\"), error);\n            return [];\n        }\n    }\n    getById(id) {\n        const items = this.getAll();\n        return items.find((item)=>item.id === id) || null;\n    }\n    create(item) {\n        const items = this.getAll();\n        const newItem = {\n            ...item,\n            id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n            createdAt: new Date().toISOString()\n        };\n        items.push(newItem);\n        this.saveAll(items);\n        return newItem;\n    }\n    update(id, updates) {\n        const items = this.getAll();\n        const index = items.findIndex((item)=>item.id === id);\n        if (index === -1) return null;\n        const updatedItem = {\n            ...items[index],\n            ...updates,\n            updatedAt: new Date().toISOString()\n        };\n        items[index] = updatedItem;\n        this.saveAll(items);\n        return updatedItem;\n    }\n    delete(id) {\n        const items = this.getAll();\n        const filteredItems = items.filter((item)=>item.id !== id);\n        if (filteredItems.length === items.length) return false;\n        this.saveAll(filteredItems);\n        return true;\n    }\n    saveAll(items) {\n        if (false) {}\n        try {\n            const cleanedItems = this.cleanBlobUrls(items);\n            localStorage.setItem(this.key, JSON.stringify(cleanedItems));\n        } catch (error) {\n            console.error(\"Error saving \".concat(this.key, \" to localStorage:\"), error);\n        }\n    }\n    cleanBlobUrls(items) {\n        return JSON.parse(JSON.stringify(items, (key, value)=>{\n            if (typeof value === \"string\" && value.startsWith(\"blob:\")) {\n                return \"/placeholder.svg\";\n            }\n            return value;\n        }));\n    }\n    clear() {\n        if (false) {}\n        localStorage.removeItem(this.key);\n    }\n    constructor(key){\n        this.key = key;\n    }\n}\nclass CachedLocalStorageManager extends LocalStorageManager {\n    getAll() {\n        if (false) {}\n        const now = Date.now();\n        // Return cached data if still valid\n        if (this.cache && now - this.cacheTimestamp < this.CACHE_DURATION) {\n            return this.cache;\n        }\n        try {\n            const data = localStorage.getItem(this.key);\n            const parsed = safeParseJSON(data, []);\n            // Update cache\n            this.cache = parsed;\n            this.cacheTimestamp = now;\n            return parsed;\n        } catch (error) {\n            console.error(\"Error reading \".concat(this.key, \" from localStorage:\"), error);\n            return [];\n        }\n    }\n    saveAll(items) {\n        if (false) {}\n        try {\n            const cleanedItems = this.cleanBlobUrls(items);\n            localStorage.setItem(this.key, JSON.stringify(cleanedItems));\n            // Invalidate cache\n            this.cache = cleanedItems;\n            this.cacheTimestamp = Date.now();\n        } catch (error) {\n            console.error(\"Error saving \".concat(this.key, \" to localStorage:\"), error);\n        }\n    }\n    cleanBlobUrls(items) {\n        return JSON.parse(JSON.stringify(items, (key, value)=>{\n            if (typeof value === \"string\" && value.startsWith(\"blob:\")) {\n                return \"/placeholder.svg\";\n            }\n            return value;\n        }));\n    }\n    clear() {\n        if (false) {}\n        localStorage.removeItem(this.key);\n        // Clear cache\n        this.cache = null;\n        this.cacheTimestamp = 0;\n    }\n    constructor(...args){\n        super(...args), this.cache = null, this.cacheTimestamp = 0, this.CACHE_DURATION = 5000 // 5 seconds\n        ;\n    }\n}\n// Service-specific storage manager\nclass ServiceStorageManager extends CachedLocalStorageManager {\n    search(filters) {\n        let services = this.getAll();\n        if (filters.search) {\n            const searchTerm = filters.search.toLowerCase();\n            services = services.filter((service)=>service.title.toLowerCase().includes(searchTerm) || service.description.toLowerCase().includes(searchTerm) || service.tags.some((tag)=>tag.toLowerCase().includes(searchTerm)));\n        }\n        if (filters.category) {\n            services = services.filter((service)=>service.category.slug === filters.category);\n        }\n        if (filters.priceMin !== undefined) {\n            services = services.filter((service)=>service.price >= filters.priceMin);\n        }\n        if (filters.priceMax !== undefined) {\n            services = services.filter((service)=>service.price <= filters.priceMax);\n        }\n        if (filters.deliveryTime !== undefined) {\n            services = services.filter((service)=>service.deliveryTime.value <= filters.deliveryTime);\n        }\n        return services;\n    }\n    getByCategory(categorySlug) {\n        return this.getAll().filter((service)=>service.category.slug === categorySlug);\n    }\n    getBySeller(sellerId) {\n        return this.getAll().filter((service)=>service.sellerId === sellerId);\n    }\n}\n// Order-specific storage manager\nclass OrderStorageManager extends CachedLocalStorageManager {\n    getUserOrders(userId) {\n        return this.getAll().filter((order)=>order.buyerId === userId || order.sellerId === userId);\n    }\n    getBuyerOrders(buyerId) {\n        return this.getAll().filter((order)=>order.buyerId === buyerId);\n    }\n    getSellerOrders(sellerId) {\n        return this.getAll().filter((order)=>order.sellerId === sellerId);\n    }\n}\n// Favorites storage manager\nclass FavoritesStorageManager extends CachedLocalStorageManager {\n    getUserFavorites(userId) {\n        return this.getAll().filter((fav)=>fav.userId === userId);\n    }\n    isFavorite(userId, serviceId) {\n        return this.getAll().some((fav)=>fav.userId === userId && fav.serviceId === serviceId);\n    }\n    toggleFavorite(userId, serviceId) {\n        const existing = this.getAll().find((fav)=>fav.userId === userId && fav.serviceId === serviceId);\n        if (existing) {\n            this.delete(existing.id);\n            return false;\n        } else {\n            this.create({\n                userId,\n                serviceId\n            });\n            return true;\n        }\n    }\n}\n// Initialize storage managers\nconst serviceStorage = new ServiceStorageManager(STORAGE_KEYS.SERVICES);\nconst orderStorage = new OrderStorageManager(STORAGE_KEYS.ORDERS);\nconst userStorage = new CachedLocalStorageManager(STORAGE_KEYS.USERS);\nconst favoritesStorage = new FavoritesStorageManager(STORAGE_KEYS.FAVORITES);\n// Initialize sample data if not exists\nasync function initializeSampleData() {\n    if (false) {}\n    try {\n        await cleanupInvalidBlobUrls();\n        // Check if data already exists to avoid unnecessary work\n        const hasCategories = localStorage.getItem(STORAGE_KEYS.CATEGORIES);\n        const hasServices = localStorage.getItem(STORAGE_KEYS.SERVICES);\n        const hasOrders = localStorage.getItem(STORAGE_KEYS.ORDERS);\n        const hasUsers = localStorage.getItem(STORAGE_KEYS.USERS);\n        const hasFavorites = localStorage.getItem(STORAGE_KEYS.FAVORITES);\n        // Only initialize missing data\n        if (!hasCategories) {\n            localStorage.setItem(STORAGE_KEYS.CATEGORIES, JSON.stringify(DEFAULT_CATEGORIES));\n        }\n        if (!hasServices) {\n            localStorage.setItem(STORAGE_KEYS.SERVICES, JSON.stringify(SAMPLE_SERVICES));\n        }\n        if (!hasOrders) {\n            localStorage.setItem(STORAGE_KEYS.ORDERS, JSON.stringify([]));\n        }\n        if (!hasUsers) {\n            localStorage.setItem(STORAGE_KEYS.USERS, JSON.stringify([]));\n        }\n        if (!hasFavorites) {\n            localStorage.setItem(STORAGE_KEYS.FAVORITES, JSON.stringify([]));\n        }\n        console.log(\"[v0] ✅ Sample data initialized successfully\");\n    } catch (error) {\n        console.error(\"[v0] ❌ Failed to initialize sample data:\", error);\n    }\n}\nasync function cleanupInvalidBlobUrls() {\n    if (false) {}\n    const keysToClean = [\n        STORAGE_KEYS.CATEGORIES,\n        STORAGE_KEYS.SERVICES,\n        STORAGE_KEYS.ORDERS,\n        STORAGE_KEYS.USERS,\n        \"marketplace_categories\",\n        \"thumbnailStorage\"\n    ];\n    for (const key of keysToClean){\n        try {\n            const data = localStorage.getItem(key);\n            if (data) {\n                // Replace any blob URLs with placeholder images\n                const cleanedData = data.replace(/blob:https?:\\/\\/[^\"'\\s,}]+/g, '\"/placeholder.svg\"');\n                if (cleanedData !== data) {\n                    localStorage.setItem(key, cleanedData);\n                    console.log(\"[v0] Cleaned invalid blob URLs from \".concat(key));\n                }\n            }\n        } catch (error) {\n            console.warn(\"[v0] Error cleaning blob URLs from \".concat(key, \":\"), error);\n            // If data is completely corrupted, remove it\n            try {\n                localStorage.removeItem(key);\n                console.log(\"[v0] Removed corrupted data from \".concat(key));\n            } catch (removeError) {\n                console.error(\"[v0] Failed to remove corrupted data from \".concat(key, \":\"), removeError);\n            }\n        }\n    }\n}\nfunction safeParseJSON(data, fallback) {\n    if (!data) return fallback;\n    try {\n        const parsed = JSON.parse(data);\n        return cleanBlobUrlsFromData(parsed);\n    } catch (error) {\n        console.warn(\"[v0] Failed to parse JSON from localStorage:\", error);\n        return fallback;\n    }\n}\nfunction cleanBlobUrlsFromData(data) {\n    return JSON.parse(JSON.stringify(data, (key, value)=>{\n        if (typeof value === \"string\" && value.startsWith(\"blob:\")) {\n            return \"/placeholder.svg\";\n        }\n        return value;\n    }));\n}\nfunction getCategories() {\n    if (false) {}\n    const data = localStorage.getItem(STORAGE_KEYS.CATEGORIES);\n    return safeParseJSON(data, DEFAULT_CATEGORIES);\n}\nfunction clearAllData() {\n    if (false) {}\n    Object.values(STORAGE_KEYS).forEach((key)=>{\n        localStorage.removeItem(key);\n    });\n} // Removed auto-initialization to prevent blocking\n // Auto-initialization is now handled by MarketplaceProvider\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/local-storage.ts\n"));

/***/ })

}]);